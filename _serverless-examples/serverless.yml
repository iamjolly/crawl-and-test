# Serverless Configuration for CATS (Crawl and Test System)
# Deploy with: serverless deploy

service: cats-accessibility-crawler

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}

  environment:
    REPORTS_BUCKET: ${self:custom.reportsBucket}
    REPORT_GENERATOR_FUNCTION: ${self:service}-${self:provider.stage}-generateReport
    BUILD_HOOK_URL: ${env:BUILD_HOOK_URL, ''}
    # Configuration system environment variables
    CATS_REPORTS_DIR: s3://${self:custom.reportsBucket}/reports
    CATS_WCAG_VERSION: ${env:CATS_WCAG_VERSION, '2.1'}
    CATS_WCAG_LEVEL: ${env:CATS_WCAG_LEVEL, 'AA'}
    CATS_MAX_PAGES: ${env:CATS_MAX_PAGES, '50'}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::${self:custom.reportsBucket}
            - arn:aws:s3:::${self:custom.reportsBucket}/*
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource: '*'

custom:
  reportsBucket: cats-a11y-reports-${self:provider.stage}

functions:
  crawlSite:
    handler: lambda-crawler.crawlWebsite
    timeout: 900 # 15 minutes (max for Lambda)
    memorySize: 3008 # Max memory for Playwright
    events:
      - http:
          path: /crawl-site
          method: post
          cors: true
    layers:
      - arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:25 # Playwright layer

  generateReport:
    handler: lambda-report-generator.generateReport
    timeout: 300 # 5 minutes
    memorySize: 1024
    events:
      - http:
          path: /generate-report
          method: post
          cors: true

  listReports:
    handler: lambda-list-reports.listReports
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: /list-reports
          method: get
          cors: true

resources:
  Resources:
    ReportsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.reportsBucket}
        PublicReadPolicy:
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: PublicReadGetObject
                Effect: Allow
                Principal: '*'
                Action: 's3:GetObject'
                Resource:
                  - arn:aws:s3:::${self:custom.reportsBucket}/reports/*
                  - arn:aws:s3:::${self:custom.reportsBucket}/styles/*
                  - arn:aws:s3:::${self:custom.reportsBucket}/scripts/*
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - HEAD
              MaxAge: 3000

plugins:
  - serverless-offline
