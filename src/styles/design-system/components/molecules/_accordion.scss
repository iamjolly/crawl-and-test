// ==========================================================================
// Accordion Molecule Component
// ==========================================================================
//
// Molecular accordion component for collapsible content.
// Built with accessibility and keyboard navigation in mind.
//

@use "../../tokens" as tokens;
@use "../../foundation" as foundation;
@use "../atoms" as atoms;

// ==========================================================================
// Base Accordion
// ==========================================================================

.accordion {
  // Reset default margins
  margin: 0;
  
  // Accordion container
  border: 1px solid var(--color-border-primary);
  border-radius: var(--radius-lg);
  overflow: hidden;
  background-color: var(--color-background-primary);
  box-shadow: var(--elevation-card);
}

// ==========================================================================
// Accordion Item
// ==========================================================================

.accordion-item {
  // Remove default margins
  margin: 0;
  
  // Border between items
  &:not(:last-child) {
    border-bottom: 1px solid var(--color-border-primary);
  }
  
  // Expanded state
  &.expanded {
    .accordion-header {
      background-color: var(--color-background-tertiary);
      border-bottom: 1px solid var(--color-border-primary);
      
      .accordion-trigger {
        .accordion-icon {
          transform: rotate(180deg);
        }
      }
      
      .accordion-toggle {
        transform: rotate(90deg);
      }
    }
    
    .accordion-content {
      display: block;
    }
  }
}

// ==========================================================================
// Accordion Header
// ==========================================================================

.accordion-header {
  margin: 0;
  background-color: var(--color-background-primary);
  transition: background-color 0.2s ease-in-out;
  
  &:hover {
    background-color: var(--color-background-secondary);
  }
  
  // When accordion-header is used as a button (for violations)
  &[type="button"] {
    display: flex;
    align-items: center;
    width: 100%;
    padding: var(--space-4) var(--space-5);
    background: none;
    border: none;
    font-family: var(--font-family-primary);
    font-size: var(--text-ui-large);
    font-weight: var(--font-weight-medium);
    line-height: var(--line-height-normal);
    text-align: left;
    color: var(--color-text-primary);
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    
    &:hover {
      background-color: var(--color-background-secondary);
    }
    
    &:focus-visible {
      outline: 2px solid var(--color-primary-focus);
      outline-offset: -2px;
    }
  }
}

.accordion-trigger {
  // Layout
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: var(--space-4) var(--space-5);
  
  // Reset button styles
  background: none;
  border: none;
  
  // Typography
  font-family: var(--font-family-primary);
  font-size: var(--text-ui-large);
  font-weight: var(--font-weight-medium);
  line-height: var(--line-height-normal);
  text-align: left;
  color: var(--color-text-primary);
  
  // Interaction
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  
  // Focus state
  &:focus-visible {
    outline: 2px solid var(--color-primary-focus);
    outline-offset: -3px;
    background-color: var(--color-background-secondary);
  }
  
  // Hover state
  &:hover {
    color: var(--color-primary);
  }
  
  // Disabled state
  &:disabled {
    color: var(--color-text-disabled);
    cursor: not-allowed;
    
    &:hover {
      color: var(--color-text-disabled);
      background-color: transparent;
    }
  }
  
  // Trigger content
  .accordion-title {
    flex: 1;
    margin: 0;
    font-size: inherit;
    font-weight: inherit;
    color: inherit;
  }
  
  .accordion-subtitle {
    display: block;
    font-size: var(--text-body-small);
    font-weight: var(--font-weight-normal);
    color: var(--color-text-secondary);
    margin-top: var(--space-1);
  }
  
  // Icon
  .accordion-icon {
    width: 1.25rem;
    height: 1.25rem;
    margin-left: var(--space-3);
    transition: transform 0.2s ease-in-out;
    color: var(--color-text-secondary);
    flex-shrink: 0;
  }
  
  // Toggle arrow (for text-based arrows like â–¶)
  .accordion-toggle {
    margin-left: var(--space-3);
    transition: transform 0.2s ease-in-out;
    color: var(--color-text-secondary);
    flex-shrink: 0;
    font-size: var(--text-body-large);
    line-height: 1;
  }
}

// Direct child selectors for accordion-header
.accordion-header {
  .accordion-toggle {
    margin-left: var(--space-3);
    transition: transform 0.2s ease-in-out;
    color: var(--color-text-secondary);
    flex-shrink: 0;
    font-size: var(--text-body-large);
    line-height: 1;
  }
}

// ==========================================================================
// Accordion Content
// ==========================================================================

.accordion-content {
  display: none;
  padding: var(--space-5);
  background-color: var(--color-background-primary);
  
  // Animation for smooth expand/collapse
  &.accordion-content-animated {
    display: block;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-in-out, padding 0.3s ease-in-out;
    padding-top: 0;
    padding-bottom: 0;
    
    &.expanded {
      max-height: 1000px; // Large enough value for content
      padding-top: var(--space-5);
      padding-bottom: var(--space-5);
    }
  }
  
  // Content typography
  p {
    margin: 0 0 var(--space-4) 0;
    color: var(--color-text-primary);
    line-height: var(--line-height-relaxed);
    
    &:last-child {
      margin-bottom: 0;
    }
  }
  
  h4, h5, h6 {
    margin: 0 0 var(--space-3) 0;
    color: var(--color-text-primary);
    
    &:not(:first-child) {
      margin-top: var(--space-6);
    }
  }
  
  ul, ol {
    margin: 0 0 var(--space-4) 0;
    padding-left: var(--space-6);
    
    &:last-child {
      margin-bottom: 0;
    }
    
    li {
      margin-bottom: var(--space-2);
      color: var(--color-text-primary);
      line-height: var(--line-height-normal);
      
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

// ==========================================================================
// Accordion Variants
// ==========================================================================

// Flush accordion (no borders)
.accordion-flush {
  border: none;
  border-radius: 0;
  box-shadow: none;
  
  .accordion-item {
    border: none;
    border-bottom: 1px solid var(--color-border-primary);
    
    &:last-child {
      border-bottom: none;
    }
  }
  
  .accordion-header {
    background-color: transparent;
    
    &:hover {
      background-color: var(--color-background-secondary);
    }
  }
}

// Bordered accordion
.accordion-bordered {
  .accordion-item {
    border: 1px solid var(--color-border-primary);
    border-radius: var(--radius-md);
    margin-bottom: var(--space-2);
    
    &:last-child {
      margin-bottom: 0;
    }
  }
}

// ==========================================================================
// Accordion Sizes
// ==========================================================================

.accordion-sm {
  .accordion-trigger {
    padding: var(--space-3) var(--space-4);
    font-size: var(--text-ui-medium);
    
    .accordion-icon {
      width: 1rem;
      height: 1rem;
    }
  }
  
  .accordion-content {
    padding: var(--space-4);
    
    &.accordion-content-animated.expanded {
      padding-top: var(--space-4);
      padding-bottom: var(--space-4);
    }
  }
}

.accordion-lg {
  .accordion-trigger {
    padding: var(--space-6) var(--space-7);
    font-size: var(--text-ui-large);
    
    .accordion-icon {
      width: 1.5rem;
      height: 1.5rem;
    }
  }
  
  .accordion-content {
    padding: var(--space-7);
    
    &.accordion-content-animated.expanded {
      padding-top: var(--space-7);
      padding-bottom: var(--space-7);
    }
  }
}

// ==========================================================================
// Accessibility Report Specific Accordions
// ==========================================================================

.report-accordion {
  @extend .accordion;
  
  .report-accordion-item {
    @extend .accordion-item;
    
    // Impact level styling
    &.impact-critical {
      border-left: 4px solid var(--color-impact-critical);
      
      .accordion-trigger {
        .impact-badge {
          background-color: var(--color-impact-critical);
          color: var(--color-text-inverse);
        }
      }
    }
    
    &.impact-serious {
      border-left: 4px solid #fd7e14;
      
      .accordion-trigger {
        .impact-badge {
          background-color: #fd7e14;
          color: var(--color-text-inverse);
        }
      }
    }
    
    &.impact-moderate {
      border-left: 4px solid var(--color-impact-moderate);
      
      .accordion-trigger {
        .impact-badge {
          background-color: var(--color-impact-moderate);
          color: var(--color-text-primary);
        }
      }
    }
    
    &.impact-minor {
      border-left: 4px solid var(--color-impact-minor);
      
      .accordion-trigger {
        .impact-badge {
          background-color: var(--color-impact-minor);
          color: var(--color-text-inverse);
        }
      }
    }
  }
  
  .report-accordion-trigger {
    @extend .accordion-trigger;
    
    // Impact badges are defined in atoms/badge
    // This ensures consistency across the design system
  }
  
  .report-accordion-content {
    @extend .accordion-content;
  }
}

// ==========================================================================
// Accordion Group
// ==========================================================================

.accordion-group {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
  
  .accordion {
    margin-bottom: 0;
  }
}

// ==========================================================================
// Accordion JavaScript Enhancements
// ==========================================================================

// Add these classes via JavaScript for enhanced interactions
.accordion-item {
  &.is-animating {
    pointer-events: none;
  }
  
  &.has-focus-within {
    box-shadow: 0 0 0 2px var(--color-primary-focus);
  }
}