// ==========================================================================
// SASS Mixins
// ==========================================================================
//
// Reusable mixins for common CSS patterns in the CATS application.
//

@import 'variables';

// ==========================================================================
// Layout Mixins
// ==========================================================================

// Container mixin
@mixin container() {
  max-width: $container-max-width;
  margin: 0 auto;
  padding: $container-padding;
}

// Flex center mixin
@mixin flex-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Flex between mixin
@mixin flex-between() {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// ==========================================================================
// Typography Mixins
// ==========================================================================

// Base text mixin
@mixin text-base() {
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $color-text;
}

// Heading mixin
@mixin heading($size: $font-size-h3, $weight: $font-weight-semibold) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height-tight;
  color: $color-text;
  margin: 0;
}

// Code text mixin
@mixin text-code() {
  font-family: $font-family-monospace;
  font-size: $font-size-small;
  background-color: $color-background-light;
  padding: 2px 4px;
  border-radius: $border-radius-small;
}

// ==========================================================================
// Component Mixins
// ==========================================================================

// Card mixin
@mixin card() {
  background: $color-background-white;
  border-radius: $border-radius-base;
  box-shadow: $box-shadow-base;
  padding: $spacing-xl;
}

// Button mixin
@mixin button-base() {
  display: inline-block;
  padding: $spacing-sm $spacing-lg;
  border: none;
  border-radius: $border-radius-base;
  font-family: $font-family-base;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  text-decoration: none;
  text-align: center;
  cursor: pointer;
  transition: all $transition-base;
  
  &:focus {
    outline: $focus-outline-width $focus-outline-style $focus-outline-color;
    outline-offset: 2px;
  }
}

// Primary button mixin
@mixin button-primary() {
  @include button-base();
  background-color: $color-primary;
  color: $color-white;
  
  &:hover {
    background-color: $color-primary-dark;
  }
  
  &:active {
    background-color: $color-primary-darker;
  }
}

// Link mixin
@mixin link() {
  color: $color-primary;
  text-decoration: none;
  transition: color $transition-fast;
  
  &:hover {
    color: $color-primary-dark;
    text-decoration: underline;
  }
  
  &:focus {
    outline: $focus-outline-width $focus-outline-style $focus-outline-color;
    outline-offset: 2px;
  }
}

// ==========================================================================
// Status/Impact Mixins
// ==========================================================================

// Impact level mixin
@mixin impact-level($level) {
  @if $level == 'critical' {
    border-left-color: $color-impact-critical;
    .impact-critical { color: $color-impact-critical; }
  } @else if $level == 'serious' {
    border-left-color: $color-impact-serious;
    .impact-serious { color: $color-impact-serious; }
  } @else if $level == 'moderate' {
    border-left-color: $color-impact-moderate;
    .impact-moderate { color: $color-impact-moderate; }
  } @else if $level == 'minor' {
    border-left-color: $color-impact-minor;
    .impact-minor { color: $color-impact-minor; }
  }
}

// Status badge mixin
@mixin status-badge($bg-color, $text-color: $color-white) {
  display: inline-block;
  padding: $spacing-xs $spacing-sm;
  background-color: $bg-color;
  color: $text-color;
  font-size: $font-size-small;
  font-weight: $font-weight-medium;
  border-radius: $border-radius-small;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

// ==========================================================================
// Accessibility Mixins
// ==========================================================================

// Screen reader only mixin
@mixin sr-only() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// High contrast mode mixin
@mixin high-contrast-mode() {
  @media (prefers-contrast: high) {
    background: $high-contrast-background !important;
    color: $high-contrast-text !important;
    border-color: $high-contrast-text !important;
  }
}

// Focus visible mixin (for better keyboard navigation)
// @param {String} $offset - Custom outline offset (default: 2px)
// @param {String} $color - Custom outline color (default: uses variable)
@mixin focus-visible($offset: 2px, $color: $focus-outline-color) {
  &:focus-visible {
    outline: $focus-outline-width $focus-outline-style $color;
    outline-offset: $offset;
  }
}

// Focus mixin with more control for specific components
@mixin focus-custom($width: $focus-outline-width, $style: $focus-outline-style, $color: $focus-outline-color, $offset: 2px) {
  &:focus {
    outline: $width $style $color;
    outline-offset: $offset;
  }
}

// ==========================================================================
// Responsive Mixins
// ==========================================================================

// Media query mixins
@mixin mobile-up() {
  @media (min-width: $breakpoint-mobile) {
    @content;
  }
}

@mixin tablet-up() {
  @media (min-width: $breakpoint-tablet) {
    @content;
  }
}

@mixin desktop-up() {
  @media (min-width: $breakpoint-desktop) {
    @content;
  }
}

@mixin wide-up() {
  @media (min-width: $breakpoint-wide) {
    @content;
  }
}

// ==========================================================================
// Animation Mixins
// ==========================================================================

// Fade in animation
@mixin fade-in($duration: $transition-base) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

// Slide in animation
@mixin slide-in-from-top($duration: $transition-base) {
  transform: translateY(-20px);
  opacity: 0;
  animation: slideInFromTop $duration ease-out forwards;
}

@keyframes slideInFromTop {
  to {
    transform: translateY(0);
    opacity: 1;
  }
}